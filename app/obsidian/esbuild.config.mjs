import obPlugin from "@aidenlx/esbuild-plugin-obsidian";
import { build } from "esbuild";
import { lessLoader } from "esbuild-plugin-less";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source visit the plugins github repository
*/
`;

const isProd = process.env.BUILD === "production";

/** @type import("esbuild").BuildOptions */
const opts = {
  bundle: true,
  watch: !isProd,
  platform: "node",
  logLevel: "info",
  external: ["obsidian", "electron", "@electron/remote"],
  format: "cjs",
  mainFields: ["browser", "module", "main"],
  sourcemap: isProd ? false : "inline",
  minify: isProd,
  define: {
    "process.env.NODE_ENV": JSON.stringify(process.env.BUILD),
  },
};
try {
  await build({
    ...opts,
    entryPoints: ["src/zt-main.ts"],
    banner: { js: banner },
    outfile: "build/main.js",
    plugins: [
      lessLoader(),
      obPlugin(),
      {
        name: "react-alias",
        setup(build) {
          build.onResolve({ filter: /^react$|^react-dom$/ }, async () => {
            const result = await build.resolve("@preact/compat", {
              resolveDir: ".",
            });
            if (result.errors.length > 0) {
              return { errors: result.errors };
            }
            return { path: result.path };
          });
        },
      },
    ],
  });
} catch (err) {
  console.error(err);
  process.exit(1);
}
